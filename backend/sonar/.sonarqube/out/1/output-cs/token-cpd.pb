≈
5D:\git\Achei\backend\Persistencia\ConnectionString.cs
	namespace 	
Persistencia
 
{ 
public 

static 
class 
ConnectionString (
{ 
public 
static 
string 
Server #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
static 
string 
Database %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
static 
string 
UserId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
static 
string 
Password %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
static 
void 
SetConnection (
(( )
string) /
server0 6
,6 7
string8 >
database? G
,G H
stringI O
userIdP V
,V W
stringX ^
password_ g
)g h
{ 	
ConnectionString 
. 
Server #
=$ %
server& ,
;, -
ConnectionString 
. 
Database %
=& '
database( 0
;0 1
ConnectionString 
. 
UserId #
=$ %
userId& ,
;, -
ConnectionString 
. 
Password %
=& '
password( 0
;0 1
} 	
public 
static 
string 
GetConnection *
(* +
)+ ,
{ 	
return 
$str 
+ 
Server %
+& '
$str( 4
+5 6
Database7 ?
+ 
$str 
+ 
UserId  &
+' (
$str) 5
+6 7
Password8 @
+A B
$strC F
;F G
} 	
} 
} Ê
ND:\git\Achei\backend\Persistencia\Contexts\Application\ApplicationDbContext.cs
	namespace 	
Persistencia
 
. 
Contexts 
.  
Application  +
{ 
public 

partial 
class  
ApplicationDbContext -
:. /
	DbContext0 9
{ 
public		  
ApplicationDbContext		 #
(		# $
DbContextOptions		$ 4
<		4 5 
ApplicationDbContext		5 I
>		I J
options		K R
)		R S
:		T U
base		V Z
(		Z [
options		[ b
)		b c
{		d e
}		f g
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
optionsBuilder 
. &
EnableSensitiveDataLogging 5
(5 6
)6 7
;7 8
optionsBuilder 
. 
UseSqlServer 
( 
ConnectionString .
.. /
GetConnection/ <
(< =
)= >
,> ?
b@ A
=>B D
bE F
.F G
MigrationsAssemblyG Y
(Y Z
$strZ f
)f g
)g h
.  
EnableDetailedErrors %
(% &
)& '
;' (
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
HasAnnotation &
(& '
$str' 7
,7 8
$str9 @
)@ A
;A B
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
UsuarioConfig0 =
(= >
)> ?
)? @
;@ A
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /

ItemConfig0 :
(: ;
); <
)< =
;= >
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
	TagConfig0 9
(9 :
): ;
); <
;< =
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
RegiaoConfig0 <
(< =
)= >
)> ?
;? @
modelBuilder 
. 
Entity 
<  
ItemPerdido  +
>+ ,
(, -
)- .
. 
Property 
( 
e 
=> 
e  
.  !
	UsuarioId! *
)* +
. 
HasColumnName 
( 
$str *
)* +
;+ ,
modelBuilder   
.   
Entity   
<    

ItemAchado    *
>  * +
(  + ,
)  , -
.!! 
Property!! 
(!! 
e!! 
=>!! 
e!!  
.!!  !
	UsuarioId!!! *
)!!* +
."" 
HasColumnName"" 
("" 
$str"" *
)""* +
;""+ ,
}## 	
}$$ 
}%% Ÿ
WD:\git\Achei\backend\Persistencia\Contexts\Application\ApplicationDbContext.DataSets.cs
	namespace 	
Persistencia
 
. 
Contexts 
.  
Application  +
{ 
public 

partial 
class  
ApplicationDbContext -
{ 
public		 
virtual		 
DbSet		 
<		 
Usuario		 $
>		$ %
Usuario		& -
{		. /
get		0 3
;		3 4
set		5 8
;		8 9
}		: ;
public

 
virtual

 
DbSet

 
<

 

ItemAchado

 '
>

' (

ItemAchado

) 3
{

4 5
get

6 9
;

9 :
set

; >
;

> ?
}

@ A
public 
virtual 
DbSet 
< 
ItemPerdido (
>( )
ItemPerdido* 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
virtual 
DbSet 
< 
Tag  
>  !
Tag" %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
DbSet 
< 
Regiao #
># $
Regiao% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
} 
} ª
DD:\git\Achei\backend\Persistencia\Interfaces\IAutenticacaoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface  
IAutenticacaoService )
:* +
ICrudService, 8
<8 9
Usuario9 @
>@ A
{ 
Usuario 
AutenticarUsuario !
(! "
string" (
email) .
,. /
string0 6
senha7 <
)< =
;= >
} 
}		 â
<D:\git\Achei\backend\Persistencia\Interfaces\ICrudService.cs
	namespace

 	
Persistencia


 
.

 

Interfaces

 !
{ 
public 

	interface 
ICrudService !
<! "
T" #
># $
where% *
T+ ,
:- .
class/ 4
,4 5
IEntity6 =
,= >
new? B
(B C
)C D
{ 
void 
	Atualizar 
( 
T 
entidade !
)! "
;" #
void 
	Atualizar 
( 
List 
< 
T 
> 
	entidades (
)( )
;) *
Task## 
AtualizarAsync## 
(## 
T## 
entidade## &
)##& '
;##' (
Task)) 
AtualizarAsync)) 
()) 
List))  
<))  !
T))! "
>))" #
	entidades))$ -
)))- .
;)). /
List++ 
<++ 
T++ 
>++ 
Buscar++ 
(++ 
)++ 
;++ 
T11 	
Buscar11
 
(11 
long11 
id11 
)11 
;11 

IQueryableFF 
<FF 
TFF 
>FF 
BuscarFF 
(FF 

ExpressionFF '
<FF' (
FuncFF( ,
<FF, -
TFF- .
,FF. /
boolFF0 4
>FF4 5
>FF5 6
	predicateFF7 @
,FF@ A
FuncFFB F
<FFF G

IQueryableFFG Q
<FFQ R
TFFR S
>FFS T
,FFT U 
IIncludableQueryableFFV j
<FFj k
TFFk l
,FFl m
objectFFn t
>FFt u
>FFu v
includeFFw ~
=	FF Ä
null
FFÅ Ö
)
FFÖ Ü
;
FFÜ á
TaskHH 
<HH 
ListHH 
<HH 
THH 
>HH 
>HH 
BuscarAsyncHH !
(HH! "
)HH" #
;HH# $
TaskJJ 
<JJ 
TJJ 
>JJ 
BuscarAsyncJJ 
(JJ 
longJJ  
idJJ! #
)JJ# $
;JJ$ %
voidQQ 
DeletarQQ 
(QQ 
TQQ 
entidadeQQ 
)QQ  
;QQ  !
voidXX 
DeletarXX 
(XX 
longXX 
idXX 
)XX 
;XX 
Task__ 
DeletarAsync__ 
(__ 
T__ 
entidade__ $
)__$ %
;__% &
Taskgg 
DeletarAsyncgg 
(gg 
longgg 
idgg !
)gg! "
;gg" #
Tnn 	
Inserirnn
 
(nn 
Tnn 
entidadenn 
)nn 
;nn 
Taskuu 
<uu 
Tuu 
>uu 
InserirAsyncuu 
(uu 
Tuu 
entidadeuu '
)uu' (
;uu( )
DbSet{{ 
<{{ 
T{{ 
>{{ 
Entity{{ 
({{ 
){{ 
;{{ 
}|| 
}}} ≥
BD:\git\Achei\backend\Persistencia\Interfaces\IITemAchadoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IItemAchadoService '
:( )
ICrudService* 6
<6 7

ItemAchado7 A
>A B
{ 
List 
< 

ItemAchado 
> 
BuscarPorIdUsuario +
(+ ,
long, 0
id1 3
)3 4
;4 5
} 
} ≈
CD:\git\Achei\backend\Persistencia\Interfaces\IItemPerdidoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IItemPerdidoService (
:) *
ICrudService+ 7
<7 8
ItemPerdido8 C
>C D
{ 
List 
< 
ItemPerdido 
> 
BuscarPorIdUsuario ,
(, -
long- 1
id2 4
)4 5
;5 6
ItemPerdido 
BuscarComTags !
(! "
long" &
id' )
)) *
;* +
ItemPerdido !
BuscarComEagerLoading )
() *
long* .
id/ 1
)1 2
;2 3
} 
} 
>D:\git\Achei\backend\Persistencia\Interfaces\IRegiaoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IRegiaoService #
:$ %
ICrudService& 2
<2 3
Regiao3 9
>9 :
{ 
Regiao 
BuscarPorItemId 
( 
long #
id$ &
)& '
;' (
} 
}		 î
;D:\git\Achei\backend\Persistencia\Interfaces\ITagService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
ITagService  
:! "
ICrudService# /
</ 0
Tag0 3
>3 4
{ 
List 
< 
Tag 
> 
BuscarPorItemId !
(! "
long" &
id' )
)) *
;* +
}		 
}

 Û
?D:\git\Achei\backend\Persistencia\Interfaces\IUsuarioService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IUsuarioService $
:% &
ICrudService' 3
<3 4
Usuario4 ;
>; <
{ 
} 
}		 ø	
AD:\git\Achei\backend\Persistencia\Services\AutenticacaoService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
AutenticacaoService $
:% &
CrudService' 2
<2 3
Usuario3 :
>: ;
,; < 
IAutenticacaoService= Q
{		 
public

 
AutenticacaoService

 "
(

" # 
ApplicationDbContext

# 7
context

8 ?
)

? @
:

A B
base

C G
(

G H
context

H O
)

O P
{

Q R
}

S T
public 
Usuario 
AutenticarUsuario (
(( )
string) /
email0 5
,5 6
string7 =
senha> C
)C D
{ 	
return 
base 
. 
Buscar 
( 
usuario &
=>' )
usuario* 1
.1 2
Email2 7
==8 :
email; @
)@ A
.A B
SingleOrDefaultB Q
(Q R
)R S
;S T
} 	
} 
} ãd
9D:\git\Achei\backend\Persistencia\Services\CrudService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
CrudService 
< 
T 
> 
:  !
ICrudService" .
<. /
T/ 0
>0 1
where2 7
T8 9
:: ;
class< A
,A B
IEntityC J
,J K
newL O
(O P
)P Q
{ 
private 
readonly 
	DbContext "
	dbService# ,
;, -
public 
CrudService 
( 
	DbContext $
	dbService% .
). /
{ 	
this 
. 
	dbService 
= 
	dbService &
;& '
} 	
public 
void 
	Atualizar 
( 
T 
entidade  (
)( )
{ 	
	dbService 
. 
Update 
( 
entidade %
)% &
;& '
	dbService 
. 
SaveChanges !
(! "
)" #
;# $
} 	
public 
void 
	Atualizar 
( 
List "
<" #
T# $
>$ %
	entidades& /
)/ 0
{ 	
	dbService 
. 
Update 
( 
	entidades &
)& '
;' (
	dbService   
.   
SaveChanges   !
(  ! "
)  " #
;  # $
}!! 	
public## 
List## 
<## 
T## 
>## 
Buscar## 
(## 
)## 
{$$ 	
return%% 
	dbService%% 
.%% 
Set%%  
<%%  !
T%%! "
>%%" #
(%%# $
)%%$ %
.%%% &
ToList%%& ,
(%%, -
)%%- .
;%%. /
}&& 	
public(( 

IQueryable(( 
<(( 
T(( 
>(( 
Buscar(( #
(((# $

Expression(($ .
<((. /
Func((/ 3
<((3 4
T((4 5
,((5 6
bool((7 ;
>((; <
>((< =
	predicate((> G
,((G H
Func((I M
<((M N

IQueryable((N X
<((X Y
T((Y Z
>((Z [
,(([ \ 
IIncludableQueryable))  
<))  !
T))! "
,))" #
object))$ *
>))* +
>))+ ,
include))- 4
=))5 6
null))7 ;
))); <
{** 	

IQueryable++ 
<++ 
T++ 
>++ 
result++  
=++! "
	dbService++# ,
.++, -
Set++- 0
<++0 1
T++1 2
>++2 3
(++3 4
)++4 5
.++5 6
Where++6 ;
(++; <
	predicate++< E
)++E F
;++F G
if-- 
(-- 
include-- 
!=-- 
null-- 
)--  
{.. 
result// 
=// 
include//  
(//  !
result//! '
)//' (
;//( )
}00 
return22 
result22 
.22 
AsQueryable22 %
(22% &
)22& '
;22' (
}33 	
public55 
T55 
Buscar55 
(55 
long55 
id55 
)55  
{66 	
return77 
	dbService77 
.77 
Set77  
<77  !
T77! "
>77" #
(77# $
)77$ %
.77% &
Find77& *
(77* +
id77+ -
)77- .
;77. /
}88 	
public:: 
void:: 
Deletar:: 
(:: 
T:: 
entidade:: &
)::& '
{;; 	
	dbService<< 
.<< 
Set<< 
<<< 
T<< 
><< 
(<< 
)<< 
.<< 
Remove<< %
(<<% &
entidade<<& .
)<<. /
;<</ 0
	dbService== 
.== 
SaveChanges== !
(==! "
)==" #
;==# $
}>> 	
public@@ 
void@@ 
Deletar@@ 
(@@ 
long@@  
id@@! #
)@@# $
{AA 	
IEntityBB 
objBB 
=BB 
newBB 
TBB 
(BB  
)BB  !
{BB" #
IdBB$ &
=BB' (
idBB) +
}BB, -
;BB- .
	dbServiceDD 
.DD 
AttachDD 
(DD 
objDD  
)DD  !
;DD! "
	dbServiceEE 
.EE 
RemoveEE 
(EE 
objEE  
)EE  !
;EE! "
	dbServiceFF 
.FF 
SaveChangesFF !
(FF! "
)FF" #
;FF# $
}GG 	
publicII 
TII 
InserirII 
(II 
TII 
entidadeII #
)II# $
{JJ 	
boolKK 
existsKK 
=KK 
	dbServiceKK #
.KK# $
SetKK$ '
<KK' (
TKK( )
>KK) *
(KK* +
)KK+ ,
.KK, -
AnyKK- 0
(KK0 1
entKK1 4
=>KK5 7
entKK8 ;
.KK; <
IdKK< >
==KK? A
entidadeKKB J
.KKJ K
IdKKK M
)KKM N
;KKN O
ifMM 
(MM 
!MM 
existsMM 
)MM 
{NN 
	dbServiceOO 
.OO 
AddOO 
(OO 
entidadeOO &
)OO& '
;OO' (
	dbServicePP 
.PP 
SaveChangesPP %
(PP% &
)PP& '
;PP' (
returnQQ 
entidadeQQ 
;QQ  
}RR 
elseSS 
{TT 
throwUU 
newUU 
	ExceptionUU #
(UU# $
$strUU$ V
)UUV W
;UUW X
}VV 
}WW 	
publicYY 
asyncYY 
TaskYY 
AtualizarAsyncYY (
(YY( )
TYY) *
entidadeYY+ 3
)YY3 4
{ZZ 	
if[[ 
([[ 
	dbService[[ 
.[[ 
Set[[ 
<[[ 
T[[ 
>[[  
([[  !
)[[! "
.[[" #
Any[[# &
([[& '
ent[[' *
=>[[+ -
ent[[. 1
.[[1 2
Id[[2 4
==[[5 7
entidade[[8 @
.[[@ A
Id[[A C
)[[C D
)[[D E
{\\ 
	dbService]] 
.]] 
Update]]  
(]]  !
entidade]]! )
)]]) *
;]]* +
await^^ 
	dbService^^ 
.^^  
SaveChangesAsync^^  0
(^^0 1
)^^1 2
;^^2 3
}__ 
else`` 
{aa 
throwbb 
newbb 
	Exceptionbb #
(bb# $
$strbb$ _
)bb_ `
;bb` a
}cc 
}ee 	
publicgg 
asyncgg 
Taskgg 
AtualizarAsyncgg (
(gg( )
Listgg) -
<gg- .
Tgg. /
>gg/ 0
	entidadesgg1 :
)gg: ;
{hh 	
	dbServiceii 
.ii 
Updateii 
(ii 
	entidadesii &
)ii& '
;ii' (
awaitjj 
	dbServicejj 
.jj 
SaveChangesAsyncjj ,
(jj, -
)jj- .
;jj. /
}kk 	
publicmm 
asyncmm 
Taskmm 
<mm 
Listmm 
<mm 
Tmm  
>mm  !
>mm! "
BuscarAsyncmm# .
(mm. /
)mm/ 0
{nn 	
returnoo 
awaitoo 
	dbServiceoo "
.oo" #
Setoo# &
<oo& '
Too' (
>oo( )
(oo) *
)oo* +
.oo+ ,
ToListAsyncoo, 7
(oo7 8
)oo8 9
;oo9 :
}pp 	
publicrr 
asyncrr 
Taskrr 
<rr 
Trr 
>rr 
BuscarAsyncrr (
(rr( )
longrr) -
idrr. 0
)rr0 1
{ss 	
returntt 
awaittt 
	dbServicett "
.tt" #
	FindAsynctt# ,
<tt, -
Ttt- .
>tt. /
(tt/ 0
idtt0 2
)tt2 3
;tt3 4
}uu 	
publicww 
asyncww 
Taskww 
DeletarAsyncww &
(ww& '
Tww' (
entidadeww) 1
)ww1 2
{xx 	
EntityEntryyy 
<yy 
Tyy 
>yy 
retornoyy "
=yy# $
	dbServiceyy% .
.yy. /
Removeyy/ 5
(yy5 6
entidadeyy6 >
)yy> ?
;yy? @
awaitzz 
	dbServicezz 
.zz 
SaveChangesAsynczz ,
(zz, -
)zz- .
;zz. /
}{{ 	
public}} 
async}} 
Task}} 
DeletarAsync}} &
(}}& '
long}}' +
id}}, .
)}}. /
{~~ 	
IEntity 
obj 
= 
new 
T 
(  
)  !
{" #
Id$ &
=' (
id) +
}, -
;- .
	dbService
ÅÅ 
.
ÅÅ 
Attach
ÅÅ 
(
ÅÅ 
obj
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "
	dbService
ÇÇ 
.
ÇÇ 
Remove
ÇÇ 
(
ÇÇ 
obj
ÇÇ  
)
ÇÇ  !
;
ÇÇ! "
await
ÉÉ 
	dbService
ÉÉ 
.
ÉÉ 
SaveChangesAsync
ÉÉ ,
(
ÉÉ, -
)
ÉÉ- .
;
ÉÉ. /
}
ÑÑ 	
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
T
ÜÜ 
>
ÜÜ 
InserirAsync
ÜÜ )
(
ÜÜ) *
T
ÜÜ* +
entidade
ÜÜ, 4
)
ÜÜ4 5
{
áá 	
try
àà 
{
ââ 
bool
ää 
exists
ää 
=
ää 
	dbService
ää '
.
ää' (
Set
ää( +
<
ää+ ,
T
ää, -
>
ää- .
(
ää. /
)
ää/ 0
.
ää0 1
Any
ää1 4
(
ää4 5
ent
ää5 8
=>
ää9 ;
ent
ää< ?
.
ää? @
Id
ää@ B
==
ääC E
entidade
ääF N
.
ääN O
Id
ääO Q
)
ääQ R
;
ääR S
if
åå 
(
åå 
!
åå 
exists
åå 
)
åå 
{
çç 
await
éé 
	dbService
éé #
.
éé# $
AddAsync
éé$ ,
(
éé, -
entidade
éé- 5
)
éé5 6
;
éé6 7
await
èè 
	dbService
èè #
.
èè# $
SaveChangesAsync
èè$ 4
(
èè4 5
)
èè5 6
;
èè6 7
return
êê 
entidade
êê #
;
êê# $
}
ëë 
else
íí 
{
ìì 
System
îî 
.
îî 
Diagnostics
îî &
.
îî& '
Debug
îî' ,
.
îî, -
	WriteLine
îî- 6
(
îî6 7
entidade
îî7 ?
.
îî? @
GetType
îî@ G
(
îîG H
)
îîH I
+
îîJ K
$str
îîL T
+
îîU V
entidade
îîW _
.
îî_ `
Id
îî` b
+
îîc d
$str
îîe x
)
îîx y
;
îîy z
throw
ïï 
new
ïï 
	Exception
ïï '
(
ïï' (
$str
ïï( D
)
ïïD E
;
ïïE F
}
ññ 
}
óó 
catch
òò 
(
òò 
	Exception
òò 
e
òò 
)
òò 
{
ôô 
System
öö 
.
öö 
Diagnostics
öö "
.
öö" #
Debug
öö# (
.
öö( )
	WriteLine
öö) 2
(
öö2 3
e
öö3 4
.
öö4 5
Message
öö5 <
)
öö< =
;
öö= >
throw
õõ 
new
õõ 
	Exception
õõ #
(
õõ# $
$str
õõ$ T
)
õõT U
;
õõU V
}
úú 
}
ùù 	
public
üü 
DbSet
üü 
<
üü 
T
üü 
>
üü 
Entity
üü 
(
üü 
)
üü  
{
†† 	
return
°° 
	dbService
°° 
.
°° 
Set
°°  
<
°°  !
T
°°! "
>
°°" #
(
°°# $
)
°°$ %
;
°°% &
}
¢¢ 	
}
££ 
}§§ Ø	
?D:\git\Achei\backend\Persistencia\Services\ItemAchadoService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public		 

class		 
ItemAchadoService		 "
:		# $
CrudService		% 0
<		0 1

ItemAchado		1 ;
>		; <
,		< =
IItemAchadoService		> P
{

 
public 
ItemAchadoService  
(  ! 
ApplicationDbContext! 5
	dbContext6 ?
)? @
:A B
baseC G
(G H
	dbContextH Q
)Q R
{S T
}U V
public 
List 
< 

ItemAchado 
> 
BuscarPorIdUsuario  2
(2 3
long3 7
id8 :
): ;
{ 	
return 
base 
. 
Buscar 
( 
perdido &
=>' )
perdido* 1
.1 2
	UsuarioId2 ;
==< >
id? A
)A B
.B C
ToListC I
(I J
)J K
;K L
} 	
} 
} Ä
@D:\git\Achei\backend\Persistencia\Services\ItemPerdidoService.cs
	namespace 	
Persistencia
 
. 
Services 
{		 
public

 

class

 
ItemPerdidoService

 #
:

$ %
CrudService

& 1
<

1 2
ItemPerdido

2 =
>

= >
,

> ?
IItemPerdidoService

@ S
{ 
public 
ItemPerdidoService !
(! " 
ApplicationDbContext" 6
	dbContext7 @
)@ A
:B C
baseD H
(H I
	dbContextI R
)R S
{T U
}V W
public 
List 
< 
ItemPerdido 
>  
BuscarPorIdUsuario! 3
(3 4
long4 8
id9 ;
); <
{ 	
return 
base 
. 
Buscar 
( 
perdido &
=>' )
perdido* 1
.1 2
	UsuarioId2 ;
==< >
id? A
)A B
.B C
ToListC I
(I J
)J K
;K L
} 	
public 
ItemPerdido 
BuscarComTags (
(( )
long) -
id. 0
)0 1
{ 	
return 
base 
. 
Buscar 
( 
perdido &
=>' )
perdido* 1
.1 2
Id2 4
==5 7
id8 :
,: ;
result< B
=>C E
resultF L
.L M
IncludeM T
(T U
perdidoU \
=>] _
perdido` g
.g h
Tagsh l
)l m
)m n
. 
SingleOrDefault  
(  !
)! "
;" #
} 	
public 
ItemPerdido !
BuscarComEagerLoading 0
(0 1
long1 5
id6 8
)8 9
{ 	
return 
base 
. 
Entity 
( 
)  
. 
Include 
( 
item 
=>  
item! %
.% &
Regiao& ,
), -
. 
Include 
( 
item 
=>  
item! %
.% &
Tags& *
)* +
. 
Single 
( 
item 
=> 
item  $
.$ %
Id% '
==( *
id+ -
)- .
;. /
} 	
}   
}!! Æ

;D:\git\Achei\backend\Persistencia\Services\RegiaoService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
RegiaoService 
:  
CrudService! ,
<, -
Regiao- 3
>3 4
,4 5
IRegiaoService6 D
{		 
public

 
RegiaoService

 
(

  
ApplicationDbContext

 1
	dbContext

2 ;
)

; <
:

= >
base

? C
(

C D
	dbContext

D M
)

M N
{

O P
}

Q R
public 
Regiao 
BuscarPorItemId %
(% &
long& *
id+ -
)- .
{ 	
return 
base 
. 
Entity 
( 
)  
.  !
Where! &
(& '
regiao' -
=>. 0
regiao1 7
.7 8
Item8 <
.< =
Any= @
(@ A
itemA E
=>F H
itemI M
.M N
IdN P
==Q S
idT V
)V W
)W X
.X Y
SingleY _
(_ `
)` a
;a b
} 	
} 
} ˜
8D:\git\Achei\backend\Persistencia\Services\TagService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public		 

class		 

TagService		 
:		 
CrudService		 )
<		) *
Tag		* -
>		- .
,		. /
ITagService		0 ;
{

 
public 

TagService 
(  
ApplicationDbContext .
	dbContext/ 8
)8 9
:: ;
base< @
(@ A
	dbContextA J
)J K
{L M
}N O
public 
List 
< 
Tag 
> 
BuscarPorItemId (
(( )
long) -
id. 0
)0 1
{ 	
return 
base 
. 
Buscar 
( 
tag "
=># %
tag& )
.) *
ItemId* 0
==1 3
id4 6
)6 7
.7 8
ToList8 >
(> ?
)? @
;@ A
} 	
} 
} è
<D:\git\Achei\backend\Persistencia\Services\UsuarioService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
UsuarioService 
:  !
CrudService" -
<- .
Usuario. 5
>5 6
,6 7
IUsuarioService8 G
{ 
public		 
UsuarioService		 
(		  
ApplicationDbContext		 2
	dbContext		3 <
)		< =
:		> ?
base		@ D
(		D E
	dbContext		E N
)		N O
{		P Q
}		R S
}

 
} 