
4Persistencia.Services.CrudService<T>.DeletarAsync(T)E
9D:\git\Achei\backend\Persistencia\Services\CrudService.csÌ Ì(&"0*Ê
0á
Þ
E
9D:\git\Achei\backend\Persistencia\Services\CrudService.csÎ Î(-
%0'Microsoft.EntityFrameworkCore.DbContext"__id*`*^&
$Persistencia.Services.CrudService<T>"4
	dbService'Microsoft.EntityFrameworkCore.DbContext±®
E
9D:\git\Achei\backend\Persistencia\Services\CrudService.csÎ Î(&G
%1AMicrosoft.EntityFrameworkCore.ChangeTracking.EntityEntry<TEntity>"@Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)*/
-
%0'Microsoft.EntityFrameworkCore.DbContext*

entidadeT2Remove<TEntity>(TEntity)á
Þ
E
9D:\git\Achei\backend\Persistencia\Services\CrudService.csÏ Ï(-
%2'Microsoft.EntityFrameworkCore.DbContext"__id*`*^&
$Persistencia.Services.CrudService<T>"4
	dbService'Microsoft.EntityFrameworkCore.DbContextÃÀ
E
9D:\git\Achei\backend\Persistencia\Services\CrudService.csÏ Ï(.*
%3$System.Threading.Tasks.Task<TResult>"\Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)*/
-
%2'Microsoft.EntityFrameworkCore.DbContext*
""24SaveChangesAsync(System.Threading.CancellationToken)*
1*a
1"\
E
9D:\git\Achei\backend\Persistencia\Services\CrudService.csÐ Ð(	
implicit return:
entidadeTB(&
$Persistencia.Services.CrudService<T>