Å
5E:\Git\Achei\backend\Persistencia\ConnectionString.cs
	namespace 	
Persistencia
 
{ 
public 

static 
class 
ConnectionString (
{ 
public 
static 
string 
Server #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
static 
string 
Database %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
static 
string 
UserId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
static 
string 
Password %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
static 
void 
SetConnection (
(( )
string) /
server0 6
,6 7
string8 >
database? G
,G H
stringI O
userIdP V
,V W
stringX ^
password_ g
)g h
{ 	
ConnectionString 
. 
Server #
=$ %
server& ,
;, -
ConnectionString 
. 
Database %
=& '
database( 0
;0 1
ConnectionString 
. 
UserId #
=$ %
userId& ,
;, -
ConnectionString 
. 
Password %
=& '
password( 0
;0 1
} 	
public 
static 
string 
GetConnection *
(* +
)+ ,
{ 	
return 
$str 
+ 
Server %
+& '
$str( 4
+5 6
Database7 ?
+ 
$str 
+ 
UserId  &
+' (
$str) 5
+6 7
Password8 @
+A B
$strC F
;F G
} 	
} 
} æ
NE:\Git\Achei\backend\Persistencia\Contexts\Application\ApplicationDbContext.cs
	namespace 	
Persistencia
 
. 
Contexts 
.  
Application  +
{ 
public 

partial 
class  
ApplicationDbContext -
:. /
	DbContext0 9
{ 
public		  
ApplicationDbContext		 #
(		# $
DbContextOptions		$ 4
<		4 5 
ApplicationDbContext		5 I
>		I J
options		K R
)		R S
:		T U
base		V Z
(		Z [
options		[ b
)		b c
{		d e
}		f g
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
optionsBuilder 
. &
EnableSensitiveDataLogging 5
(5 6
)6 7
;7 8
optionsBuilder 
. 
UseSqlServer 
( 
ConnectionString .
.. /
GetConnection/ <
(< =
)= >
,> ?
b@ A
=>B D
bE F
.F G
MigrationsAssemblyG Y
(Y Z
$strZ f
)f g
)g h
.  
EnableDetailedErrors %
(% &
)& '
;' (
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
HasAnnotation &
(& '
$str' 7
,7 8
$str9 @
)@ A
;A B
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
UsuarioConfig0 =
(= >
)> ?
)? @
;@ A
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /

ItemConfig0 :
(: ;
); <
)< =
;= >
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
	TagConfig0 9
(9 :
): ;
); <
;< =
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /
RegiaoConfig0 <
(< =
)= >
)> ?
;? @
modelBuilder 
. 
Entity 
<  
ItemPerdido  +
>+ ,
(, -
)- .
. 
Property 
( 
e 
=> 
e  
.  !
	UsuarioId! *
)* +
. 
HasColumnName 
( 
$str *
)* +
;+ ,
modelBuilder   
.   
Entity   
<    

ItemAchado    *
>  * +
(  + ,
)  , -
.!! 
Property!! 
(!! 
e!! 
=>!! 
e!!  
.!!  !
	UsuarioId!!! *
)!!* +
."" 
HasColumnName"" 
("" 
$str"" *
)""* +
;""+ ,
}## 	
}$$ 
}%% Ù
WE:\Git\Achei\backend\Persistencia\Contexts\Application\ApplicationDbContext.DataSets.cs
	namespace 	
Persistencia
 
. 
Contexts 
.  
Application  +
{ 
public 

partial 
class  
ApplicationDbContext -
{ 
public		 
virtual		 
DbSet		 
<		 
Usuario		 $
>		$ %
Usuario		& -
{		. /
get		0 3
;		3 4
set		5 8
;		8 9
}		: ;
public

 
virtual

 
DbSet

 
<

 

ItemAchado

 '
>

' (

ItemAchado

) 3
{

4 5
get

6 9
;

9 :
set

; >
;

> ?
}

@ A
public 
virtual 
DbSet 
< 
ItemPerdido (
>( )
ItemPerdido* 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
public 
virtual 
DbSet 
< 
Tag  
>  !
Tag" %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
virtual 
DbSet 
< 
Regiao #
># $
Regiao% +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
} 
} »
DE:\Git\Achei\backend\Persistencia\Interfaces\IAutenticacaoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface  
IAutenticacaoService )
:* +
ICrudService, 8
<8 9
Usuario9 @
>@ A
{ 
Usuario 
AutenticarUsuario !
(! "
string" (
email) .
,. /
string0 6
senha7 <
)< =
;= >
} 
}		 Á
<E:\Git\Achei\backend\Persistencia\Interfaces\ICrudService.cs
	namespace

 	
Persistencia


 
.

 

Interfaces

 !
{ 
public 

	interface 
ICrudService !
<! "
T" #
># $
:% &
IDisposable' 2
where3 8
T9 :
:; <
class= B
,B C
IEntityD K
,K L
newM P
(P Q
)Q R
{ 

IQueryable 
< 
T 
> 
FromSql 
( 
string $
sql% (
)( )
;) *

IQueryable)) 
<)) 
T)) 
>)) 
FromSql)) 
()) 
string)) $
sql))% (
,))( )
params))* 0
object))1 7
[))7 8
]))8 9
obj)): =
)))= >
;))> ?
void// 
	Atualizar// 
(// 
T// 
entidade// !
)//! "
;//" #
void55 
	Atualizar55 
(55 
List55 
<55 
T55 
>55 
	entidades55 (
)55( )
;55) *
Task<< 
AtualizarAsync<< 
(<< 
T<< 
entidade<< &
)<<& '
;<<' (
TaskBB 
AtualizarAsyncBB 
(BB 
ListBB  
<BB  !
TBB! "
>BB" #
	entidadesBB$ -
)BB- .
;BB. /
ListDD 
<DD 
TDD 
>DD 
BuscarDD 
(DD 
)DD 
;DD 
TJJ 	
BuscarJJ
 
(JJ 
longJJ 
idJJ 
)JJ 
;JJ 

IQueryable__ 
<__ 
T__ 
>__ 
Buscar__ 
(__ 

Expression__ '
<__' (
Func__( ,
<__, -
T__- .
,__. /
bool__0 4
>__4 5
>__5 6
	predicate__7 @
,__@ A
Func__B F
<__F G

IQueryable__G Q
<__Q R
T__R S
>__S T
,__T U 
IIncludableQueryable__V j
<__j k
T__k l
,__l m
object__n t
>__t u
>__u v
include__w ~
=	__ 
null
__ 
)
__ 
;
__ 
Taskee 
<ee 
Listee 
<ee 
Tee 
>ee 
>ee 
BuscarAsyncee !
(ee! "
)ee" #
;ee# $
Taskll 
<ll 
Tll 
>ll 
BuscarAsyncll 
(ll 
longll  
idll! #
)ll# $
;ll$ %
voidss 
Deletarss 
(ss 
Tss 
entidadess 
)ss  
;ss  !
voidzz 
Deletarzz 
(zz 
longzz 
idzz 
)zz 
;zz 
Task
 
DeletarAsync
 
(
 
T
 
entidade
 $
)
$ %
;
% &
Task
 
DeletarAsync
 
(
 
long
 
id
 !
)
! "
;
" #
T
 	
Inserir

 
(
 
T
 
entidade
 
)
 
;
 
Task
 
<
 
T
 
>
 
InserirAsync
 
(
 
T
 
entidade
 '
)
' (
;
( )
DbSet
 
<
 
T
 
>
 
Entity
 
(
 
)
 
;
 
}
 
} ³
BE:\Git\Achei\backend\Persistencia\Interfaces\IITemAchadoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IItemAchadoService '
:( )
ICrudService* 6
<6 7

ItemAchado7 A
>A B
{ 
List 
< 

ItemAchado 
> 
BuscarPorIdUsuario +
(+ ,
long, 0
id1 3
)3 4
;4 5
} 
} Å
CE:\Git\Achei\backend\Persistencia\Interfaces\IItemPerdidoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IItemPerdidoService (
:) *
ICrudService+ 7
<7 8
ItemPerdido8 C
>C D
{ 
List 
< 
ItemPerdido 
> 
BuscarPorIdUsuario ,
(, -
long- 1
id2 4
)4 5
;5 6
ItemPerdido 
BuscarComTags !
(! "
long" &
id' )
)) *
;* +
ItemPerdido !
BuscarComEagerLoading )
() *
long* .
id/ 1
)1 2
;2 3
} 
} ð
>E:\Git\Achei\backend\Persistencia\Interfaces\IRegiaoService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IRegiaoService #
:$ %
ICrudService& 2
<2 3
Regiao3 9
>9 :
{ 
Regiao 
BuscarPorItemId 
( 
long #
id$ &
)& '
;' (
} 
}		 
;E:\Git\Achei\backend\Persistencia\Interfaces\ITagService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
ITagService  
:! "
ICrudService# /
</ 0
Tag0 3
>3 4
{ 
List 
< 
Tag 
> 
BuscarPorItemId !
(! "
long" &
id' )
)) *
;* +
}		 
}

 ó
?E:\Git\Achei\backend\Persistencia\Interfaces\IUsuarioService.cs
	namespace 	
Persistencia
 
. 

Interfaces !
{ 
public 

	interface 
IUsuarioService $
:% &
ICrudService' 3
<3 4
Usuario4 ;
>; <
{ 
} 
}		 ¿	
AE:\Git\Achei\backend\Persistencia\Services\AutenticacaoService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
AutenticacaoService $
:% &
CrudService' 2
<2 3
Usuario3 :
>: ;
,; < 
IAutenticacaoService= Q
{		 
public

 
AutenticacaoService

 "
(

" # 
ApplicationDbContext

# 7
context

8 ?
)

? @
:

A B
base

C G
(

G H
context

H O
)

O P
{

Q R
}

S T
public 
Usuario 
AutenticarUsuario (
(( )
string) /
email0 5
,5 6
string7 =
senha> C
)C D
{ 	
return 
base 
. 
Buscar 
( 
usuario &
=>' )
usuario* 1
.1 2
Email2 7
==8 :
email; @
)@ A
.A B
SingleOrDefaultB Q
(Q R
)R S
;S T
} 	
} 
} ­r
9E:\Git\Achei\backend\Persistencia\Services\CrudService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
CrudService 
< 
T 
> 
:  !
ICrudService" .
<. /
T/ 0
>0 1
where2 7
T8 9
:: ;
class< A
,A B
IEntityC J
,J K
newL O
(O P
)P Q
{ 
private 
readonly 
	DbContext "
	dbService# ,
;, -
public 
CrudService 
( 
	DbContext $
	dbService% .
). /
{ 	
this 
. 
	dbService 
= 
	dbService &
;& '
} 	
public 
void 
Dispose 
( 
) 
{ 	
Dispose 
( 
true 
) 
; 
GC 
. 
SuppressFinalize 
(  
this  $
)$ %
;% &
} 	
	protected 
virtual 
void 
Dispose &
(& '
bool' +
	disposing, 5
)5 6
{ 	
	dbService 
. 
Dispose 
( 
) 
;  
}   	
public"" 

IQueryable"" 
<"" 
T"" 
>"" 
FromSql"" $
(""$ %
string""% +
sql"", /
)""/ 0
{## 	
return$$ 
	dbService$$ 
.$$ 
Set$$  
<$$  !
T$$! "
>$$" #
($$# $
)$$$ %
.$$% &
FromSql$$& -
($$- .
sql$$. 1
)$$1 2
;$$2 3
}%% 	
public'' 

IQueryable'' 
<'' 
T'' 
>'' 
FromSql'' $
(''$ %
string''% +
sql'', /
,''/ 0
params''1 7
object''8 >
[''> ?
]''? @
obj''A D
)''D E
{(( 	
return)) 
	dbService)) 
.)) 
Set))  
<))  !
T))! "
>))" #
())# $
)))$ %
.))% &
FromSql))& -
())- .
sql)). 1
,))1 2
obj))3 6
)))6 7
;))7 8
}** 	
public,, 
void,, 
	Atualizar,, 
(,, 
T,, 
entidade,,  (
),,( )
{-- 	
	dbService.. 
... 
Update.. 
(.. 
entidade.. %
)..% &
;..& '
	dbService// 
.// 
SaveChanges// !
(//! "
)//" #
;//# $
}00 	
public22 
void22 
	Atualizar22 
(22 
List22 "
<22" #
T22# $
>22$ %
	entidades22& /
)22/ 0
{33 	
	dbService44 
.44 
Update44 
(44 
	entidades44 &
)44& '
;44' (
	dbService55 
.55 
SaveChanges55 !
(55! "
)55" #
;55# $
}66 	
public88 
List88 
<88 
T88 
>88 
Buscar88 
(88 
)88 
{99 	
return:: 
	dbService:: 
.:: 
Set::  
<::  !
T::! "
>::" #
(::# $
)::$ %
.::% &
ToList::& ,
(::, -
)::- .
;::. /
};; 	
public== 

IQueryable== 
<== 
T== 
>== 
Buscar== #
(==# $

Expression==$ .
<==. /
Func==/ 3
<==3 4
T==4 5
,==5 6
bool==7 ;
>==; <
>==< =
	predicate==> G
,==G H
Func==I M
<==M N

IQueryable==N X
<==X Y
T==Y Z
>==Z [
,==[ \ 
IIncludableQueryable>>  
<>>  !
T>>! "
,>>" #
object>>$ *
>>>* +
>>>+ ,
include>>- 4
=>>5 6
null>>7 ;
)>>; <
{?? 	

IQueryable@@ 
<@@ 
T@@ 
>@@ 
result@@  
=@@! "
	dbService@@# ,
.@@, -
Set@@- 0
<@@0 1
T@@1 2
>@@2 3
(@@3 4
)@@4 5
.@@5 6
Where@@6 ;
(@@; <
	predicate@@< E
)@@E F
;@@F G
ifBB 
(BB 
includeBB 
!=BB 
nullBB 
)BB  
{CC 
resultDD 
=DD 
includeDD  
(DD  !
resultDD! '
)DD' (
;DD( )
}EE 
returnGG 
resultGG 
.GG 
AsQueryableGG %
(GG% &
)GG& '
;GG' (
}HH 	
publicJJ 
TJJ 
BuscarJJ 
(JJ 
longJJ 
idJJ 
)JJ  
{KK 	
returnLL 
	dbServiceLL 
.LL 
SetLL  
<LL  !
TLL! "
>LL" #
(LL# $
)LL$ %
.LL% &
FindLL& *
(LL* +
idLL+ -
)LL- .
;LL. /
}MM 	
publicOO 
voidOO 
DeletarOO 
(OO 
TOO 
entidadeOO &
)OO& '
{PP 	
	dbServiceQQ 
.QQ 
SetQQ 
<QQ 
TQQ 
>QQ 
(QQ 
)QQ 
.QQ 
RemoveQQ %
(QQ% &
entidadeQQ& .
)QQ. /
;QQ/ 0
	dbServiceRR 
.RR 
SaveChangesRR !
(RR! "
)RR" #
;RR# $
}SS 	
publicUU 
voidUU 
DeletarUU 
(UU 
longUU  
idUU! #
)UU# $
{VV 	
IEntityWW 
objWW 
=WW 
newWW 
TWW 
(WW  
)WW  !
{WW" #
IdWW$ &
=WW' (
idWW) +
}WW, -
;WW- .
	dbServiceYY 
.YY 
AttachYY 
(YY 
objYY  
)YY  !
;YY! "
	dbServiceZZ 
.ZZ 
RemoveZZ 
(ZZ 
objZZ  
)ZZ  !
;ZZ! "
	dbService[[ 
.[[ 
SaveChanges[[ !
([[! "
)[[" #
;[[# $
}\\ 	
public^^ 
T^^ 
Inserir^^ 
(^^ 
T^^ 
entidade^^ #
)^^# $
{__ 	
bool`` 
exists`` 
=`` 
	dbService`` #
.``# $
Set``$ '
<``' (
T``( )
>``) *
(``* +
)``+ ,
.``, -
Any``- 0
(``0 1
ent``1 4
=>``5 7
ent``8 ;
.``; <
Id``< >
==``? A
entidade``B J
.``J K
Id``K M
)``M N
;``N O
ifbb 
(bb 
!bb 
existsbb 
)bb 
{cc 
	dbServicedd 
.dd 
Adddd 
(dd 
entidadedd &
)dd& '
;dd' (
	dbServiceee 
.ee 
SaveChangesee %
(ee% &
)ee& '
;ee' (
returnff 
entidadeff 
;ff  
}gg 
elsehh 
{ii 
throwjj 
newjj (
EntityAlreadyExistsExceptionjj 6
(jj6 7
$strjj7 i
)jji j
;jjj k
}kk 
}ll 	
publicnn 
asyncnn 
Tasknn 
AtualizarAsyncnn (
(nn( )
Tnn) *
entidadenn+ 3
)nn3 4
{oo 	
ifpp 
(pp 
	dbServicepp 
.pp 
Setpp 
<pp 
Tpp 
>pp  
(pp  !
)pp! "
.pp" #
Anypp# &
(pp& '
entpp' *
=>pp+ -
entpp. 1
.pp1 2
Idpp2 4
==pp5 7
entidadepp8 @
.pp@ A
IdppA C
)ppC D
)ppD E
{qq 
	dbServicerr 
.rr 
Updaterr  
(rr  !
entidaderr! )
)rr) *
;rr* +
awaitss 
	dbServicess 
.ss  
SaveChangesAsyncss  0
(ss0 1
)ss1 2
;ss2 3
}tt 
elseuu 
{vv 
throwww 
newww #
EntityNotFoundExceptionww 1
(ww1 2
$strww2 m
)wwm n
;wwn o
}xx 
}zz 	
public|| 
async|| 
Task|| 
AtualizarAsync|| (
(||( )
List||) -
<||- .
T||. /
>||/ 0
	entidades||1 :
)||: ;
{}} 	
	dbService~~ 
.~~ 
Update~~ 
(~~ 
	entidades~~ &
)~~& '
;~~' (
await 
	dbService 
. 
SaveChangesAsync ,
(, -
)- .
;. /
}
 	
public
 
async
 
Task
 
<
 
List
 
<
 
T
  
>
  !
>
! "
BuscarAsync
# .
(
. /
)
/ 0
{
 	
return
 
await
 
	dbService
 "
.
" #
Set
# &
<
& '
T
' (
>
( )
(
) *
)
* +
.
+ ,
ToListAsync
, 7
(
7 8
)
8 9
;
9 :
}
 	
public
 
async
 
Task
 
<
 
T
 
>
 
BuscarAsync
 (
(
( )
long
) -
id
. 0
)
0 1
{
 	
return
 
await
 
	dbService
 "
.
" #
	FindAsync
# ,
<
, -
T
- .
>
. /
(
/ 0
id
0 2
)
2 3
;
3 4
}
 	
public
 
async
 
Task
 
DeletarAsync
 &
(
& '
T
' (
entidade
) 1
)
1 2
{
 	
	dbService
 
.
 
Remove
 
(
 
entidade
 %
)
% &
;
& '
await
 
	dbService
 
.
 
SaveChangesAsync
 ,
(
, -
)
- .
;
. /
}
 	
public
 
async
 
Task
 
DeletarAsync
 &
(
& '
long
' +
id
, .
)
. /
{
 	
IEntity
 
obj
 
=
 
new
 
T
 
(
  
)
  !
{
" #
Id
$ &
=
' (
id
) +
}
, -
;
- .
	dbService
 
.
 
Attach
 
(
 
obj
  
)
  !
;
! "
	dbService
 
.
 
Remove
 
(
 
obj
  
)
  !
;
! "
await
 
	dbService
 
.
 
SaveChangesAsync
 ,
(
, -
)
- .
;
. /
}
 	
public
 
async
 
Task
 
<
 
T
 
>
 
InserirAsync
 )
(
) *
T
* +
entidade
, 4
)
4 5
{
 	
try
 
{
 
bool
 
exists
 
=
 
	dbService
 '
.
' (
Set
( +
<
+ ,
T
, -
>
- .
(
. /
)
/ 0
.
0 1
Any
1 4
(
4 5
ent
5 8
=>
9 ;
ent
< ?
.
? @
Id
@ B
==
C E
entidade
F N
.
N O
Id
O Q
)
Q R
;
R S
if
¡¡ 
(
¡¡ 
!
¡¡ 
exists
¡¡ 
)
¡¡ 
{
¢¢ 
await
££ 
	dbService
££ #
.
££# $
AddAsync
££$ ,
(
££, -
entidade
££- 5
)
££5 6
;
££6 7
await
¤¤ 
	dbService
¤¤ #
.
¤¤# $
SaveChangesAsync
¤¤$ 4
(
¤¤4 5
)
¤¤5 6
;
¤¤6 7
return
¥¥ 
entidade
¥¥ #
;
¥¥# $
}
¦¦ 
else
§§ 
{
¨¨ 
System
©© 
.
©© 
Diagnostics
©© &
.
©©& '
Debug
©©' ,
.
©©, -
	WriteLine
©©- 6
(
©©6 7
entidade
©©7 ?
.
©©? @
GetType
©©@ G
(
©©G H
)
©©H I
+
©©J K
$str
©©L T
+
©©U V
entidade
©©W _
.
©©_ `
Id
©©` b
+
©©c d
$str
©©e x
)
©©x y
;
©©y z
throw
ªª 
new
ªª *
EntityAlreadyExistsException
ªª :
(
ªª: ;
$str
ªª; W
)
ªªW X
;
ªªX Y
}
«« 
}
¬¬ 
catch
­­ 
(
­­ 
	Exception
­­ 
e
­­ 
)
­­ 
{
®® 
System
¯¯ 
.
¯¯ 
Diagnostics
¯¯ "
.
¯¯" #
Debug
¯¯# (
.
¯¯( )
	WriteLine
¯¯) 2
(
¯¯2 3
e
¯¯3 4
.
¯¯4 5
Message
¯¯5 <
)
¯¯< =
;
¯¯= >
throw
°° 
new
°° *
EntityAlreadyExistsException
°° 6
(
°°6 7
$str
°°7 g
)
°°g h
;
°°h i
}
±± 
}
²² 	
public
´´ 
DbSet
´´ 
<
´´ 
T
´´ 
>
´´ 
Entity
´´ 
(
´´ 
)
´´  
{
µµ 	
return
¶¶ 
	dbService
¶¶ 
.
¶¶ 
Set
¶¶  
<
¶¶  !
T
¶¶! "
>
¶¶" #
(
¶¶# $
)
¶¶$ %
;
¶¶% &
}
·· 	
}
¸¸ 
}¹¹ ¯	
?E:\Git\Achei\backend\Persistencia\Services\ItemAchadoService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public		 

class		 
ItemAchadoService		 "
:		# $
CrudService		% 0
<		0 1

ItemAchado		1 ;
>		; <
,		< =
IItemAchadoService		> P
{

 
public 
ItemAchadoService  
(  ! 
ApplicationDbContext! 5
	dbContext6 ?
)? @
:A B
baseC G
(G H
	dbContextH Q
)Q R
{S T
}U V
public 
List 
< 

ItemAchado 
> 
BuscarPorIdUsuario  2
(2 3
long3 7
id8 :
): ;
{ 	
return 
base 
. 
Buscar 
( 
perdido &
=>' )
perdido* 1
.1 2
	UsuarioId2 ;
==< >
id? A
)A B
.B C
ToListC I
(I J
)J K
;K L
} 	
} 
} 
@E:\Git\Achei\backend\Persistencia\Services\ItemPerdidoService.cs
	namespace 	
Persistencia
 
. 
Services 
{		 
public

 

class

 
ItemPerdidoService

 #
:

$ %
CrudService

& 1
<

1 2
ItemPerdido

2 =
>

= >
,

> ?
IItemPerdidoService

@ S
{ 
public 
ItemPerdidoService !
(! " 
ApplicationDbContext" 6
	dbContext7 @
)@ A
:B C
baseD H
(H I
	dbContextI R
)R S
{T U
}V W
public 
List 
< 
ItemPerdido 
>  
BuscarPorIdUsuario! 3
(3 4
long4 8
id9 ;
); <
{ 	
return 
base 
. 
Buscar 
( 
perdido &
=>' )
perdido* 1
.1 2
	UsuarioId2 ;
==< >
id? A
)A B
.B C
ToListC I
(I J
)J K
;K L
} 	
public 
ItemPerdido 
BuscarComTags (
(( )
long) -
id. 0
)0 1
{ 	
return 
base 
. 
Buscar 
( 
perdido &
=>' )
perdido* 1
.1 2
Id2 4
==5 7
id8 :
,: ;
result< B
=>C E
resultF L
.L M
IncludeM T
(T U
perdidoU \
=>] _
perdido` g
.g h
Tagsh l
)l m
)m n
. 
SingleOrDefault  
(  !
)! "
;" #
} 	
public 
ItemPerdido !
BuscarComEagerLoading 0
(0 1
long1 5
id6 8
)8 9
{ 	
return 
base 
. 
Entity 
( 
)  
. 
Include 
( 
item 
=>  
item! %
.% &
Regiao& ,
), -
. 
Include 
( 
item 
=>  
item! %
.% &
Tags& *
)* +
. 
Single 
( 
item 
=> 
item  $
.$ %
Id% '
==( *
id+ -
)- .
;. /
} 	
}   
}!! ®

;E:\Git\Achei\backend\Persistencia\Services\RegiaoService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
RegiaoService 
:  
CrudService! ,
<, -
Regiao- 3
>3 4
,4 5
IRegiaoService6 D
{		 
public

 
RegiaoService

 
(

  
ApplicationDbContext

 1
	dbContext

2 ;
)

; <
:

= >
base

? C
(

C D
	dbContext

D M
)

M N
{

O P
}

Q R
public 
Regiao 
BuscarPorItemId %
(% &
long& *
id+ -
)- .
{ 	
return 
base 
. 
Entity 
( 
)  
.  !
Where! &
(& '
regiao' -
=>. 0
regiao1 7
.7 8
Item8 <
.< =
Any= @
(@ A
itemA E
=>F H
itemI M
.M N
IdN P
==Q S
idT V
)V W
)W X
.X Y
SingleY _
(_ `
)` a
;a b
} 	
} 
} ÷
8E:\Git\Achei\backend\Persistencia\Services\TagService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public		 

class		 

TagService		 
:		 
CrudService		 )
<		) *
Tag		* -
>		- .
,		. /
ITagService		0 ;
{

 
public 

TagService 
(  
ApplicationDbContext .
	dbContext/ 8
)8 9
:: ;
base< @
(@ A
	dbContextA J
)J K
{L M
}N O
public 
List 
< 
Tag 
> 
BuscarPorItemId (
(( )
long) -
id. 0
)0 1
{ 	
return 
base 
. 
Buscar 
( 
tag "
=># %
tag& )
.) *
ItemId* 0
==1 3
id4 6
)6 7
.7 8
ToList8 >
(> ?
)? @
;@ A
} 	
} 
} 
<E:\Git\Achei\backend\Persistencia\Services\UsuarioService.cs
	namespace 	
Persistencia
 
. 
Services 
{ 
public 

class 
UsuarioService 
:  !
CrudService" -
<- .
Usuario. 5
>5 6
,6 7
IUsuarioService8 G
{ 
public		 
UsuarioService		 
(		  
ApplicationDbContext		 2
	dbContext		3 <
)		< =
:		> ?
base		@ D
(		D E
	dbContext		E N
)		N O
{		P Q
}		R S
}

 
} 